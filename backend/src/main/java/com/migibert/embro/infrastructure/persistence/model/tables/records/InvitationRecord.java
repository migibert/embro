/*
 * This file is generated by jOOQ.
 */
package com.migibert.embro.infrastructure.persistence.model.tables.records;


import com.migibert.embro.infrastructure.persistence.model.enums.Role;
import com.migibert.embro.infrastructure.persistence.model.tables.InvitationTable;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class InvitationRecord extends UpdatableRecordImpl<InvitationRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.invitation.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.invitation.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.invitation.email</code>.
     */
    public void setEmail(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.invitation.email</code>.
     */
    public String getEmail() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.invitation.invited_by</code>.
     */
    public void setInvitedBy(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.invitation.invited_by</code>.
     */
    public String getInvitedBy() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.invitation.expires_at</code>.
     */
    public void setExpiresAt(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.invitation.expires_at</code>.
     */
    public LocalDateTime getExpiresAt() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>public.invitation.organization_id</code>.
     */
    public void setOrganizationId(UUID value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.invitation.organization_id</code>.
     */
    public UUID getOrganizationId() {
        return (UUID) get(4);
    }

    /**
     * Setter for <code>public.invitation.role</code>.
     */
    public void setRole(Role value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.invitation.role</code>.
     */
    public Role getRole() {
        return (Role) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InvitationRecord
     */
    public InvitationRecord() {
        super(InvitationTable.INVITATION);
    }

    /**
     * Create a detached, initialised InvitationRecord
     */
    public InvitationRecord(UUID id, String email, String invitedBy, LocalDateTime expiresAt, UUID organizationId, Role role) {
        super(InvitationTable.INVITATION);

        setId(id);
        setEmail(email);
        setInvitedBy(invitedBy);
        setExpiresAt(expiresAt);
        setOrganizationId(organizationId);
        setRole(role);
        resetChangedOnNotNull();
    }
}
