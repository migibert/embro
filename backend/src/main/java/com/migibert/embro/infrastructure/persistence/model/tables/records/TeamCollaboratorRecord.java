/*
 * This file is generated by jOOQ.
 */
package com.migibert.embro.infrastructure.persistence.model.tables.records;


import com.migibert.embro.infrastructure.persistence.model.tables.TeamCollaboratorTable;

import java.util.UUID;

import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TeamCollaboratorRecord extends UpdatableRecordImpl<TeamCollaboratorRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.team_collaborator.organization_id</code>.
     */
    public void setOrganizationId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.team_collaborator.organization_id</code>.
     */
    public UUID getOrganizationId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.team_collaborator.team_id</code>.
     */
    public void setTeamId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.team_collaborator.team_id</code>.
     */
    public UUID getTeamId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.team_collaborator.collaborator_id</code>.
     */
    public void setCollaboratorId(UUID value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.team_collaborator.collaborator_id</code>.
     */
    public UUID getCollaboratorId() {
        return (UUID) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<UUID, UUID> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TeamCollaboratorRecord
     */
    public TeamCollaboratorRecord() {
        super(TeamCollaboratorTable.TEAM_COLLABORATOR);
    }

    /**
     * Create a detached, initialised TeamCollaboratorRecord
     */
    public TeamCollaboratorRecord(UUID organizationId, UUID teamId, UUID collaboratorId) {
        super(TeamCollaboratorTable.TEAM_COLLABORATOR);

        setOrganizationId(organizationId);
        setTeamId(teamId);
        setCollaboratorId(collaboratorId);
        resetChangedOnNotNull();
    }
}
